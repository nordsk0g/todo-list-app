{"version":3,"sources":["components/ListItem.js","components/List.js","services/todos.js","App.js","index.js"],"names":["ListItem","todo","date","updateItem","deleteItem","className","completed","content","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","id","Date","toLocaleDateString","cx","cy","r","x1","y1","x2","y2","onClick","event","preventDefault","d","points","window","confirm","List","list","organisedDateList","initialDate","setDate","useState","daysTodos","setDaysTodos","useEffect","htmlFor","value","onChange","e","target","onBlur","Object","keys","map","key","item","baseUrl","getAll","a","async","axios","get","request","data","create","newObject","post","response","update","put","remove","delete","App","setList","newTodo","setNewTodo","setOrganisedDateList","todoService","then","reverse","newList","forEach","parsedAndFormattedDate","JSON","parse","hasOwnProperty","find","t","updatedTodo","returnedTodo","catch","error","console","filter","onSubmit","todoObject","length","stringify","concat","type","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2a8bd9fc.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst ListItem = ({ todo, date, updateItem, deleteItem }) => {\r\n  const handleDeleteClick = event => {\r\n    event.preventDefault();\r\n    const confirmDeletion = window.confirm(\r\n      `Do you really want to delete ${todo.content}?`\r\n    );\r\n    if (confirmDeletion) {\r\n      deleteItem();\r\n    }\r\n  };\r\n\r\n  const handleCompleteClick = event => {\r\n    event.preventDefault();\r\n    updateItem();\r\n  };\r\n\r\n  return (\r\n    <li className=\"todo-list-item\">\r\n      <div\r\n        className={\r\n          todo.completed\r\n            ? \"list-text-content completed-item\"\r\n            : \"list-text-content\"\r\n        }\r\n      >\r\n        {todo.content}\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"24\"\r\n          height=\"24\"\r\n          viewBox=\"0 0 24 24\"\r\n          fill=\"none\"\r\n          stroke=\"#000000\"\r\n          strokeWidth=\"3\"\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n          id=\"warning-svg\"\r\n          className={\r\n            date !== new Date().toLocaleDateString() && !todo.completed\r\n              ? \"\"\r\n              : \"hide-item\"\r\n          }\r\n        >\r\n          <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\r\n          <line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"12\"></line>\r\n          <line x1=\"12\" y1=\"16\" x2=\"12\" y2=\"16\"></line>\r\n        </svg>\r\n      </div>\r\n      <div className=\"icons\">\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"24\"\r\n          height=\"24\"\r\n          viewBox=\"0 0 24 24\"\r\n          fill=\"none\"\r\n          stroke=\"#7eff3e\"\r\n          strokeWidth=\"3\"\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n          id=\"complete-svg\"\r\n          onClick={handleCompleteClick}\r\n        >\r\n          <path d=\"M22 11.08V12a10 10 0 1 1-5.93-9.14\"></path>\r\n          <polyline points=\"22 4 12 14.01 9 11.01\"></polyline>\r\n        </svg>\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"24\"\r\n          height=\"24\"\r\n          viewBox=\"0 0 24 24\"\r\n          fill=\"none\"\r\n          stroke=\"#ff1493\"\r\n          strokeWidth=\"2\"\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n          className=\"feather feather-x-circle\"\r\n          id=\"delete-svg\"\r\n          onClick={handleDeleteClick}\r\n        >\r\n          <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\r\n          <line x1=\"15\" y1=\"9\" x2=\"9\" y2=\"15\"></line>\r\n          <line x1=\"9\" y1=\"9\" x2=\"15\" y2=\"15\"></line>\r\n        </svg>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ListItem;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ListItem from \"./ListItem\";\r\nimport \"../List.css\";\r\n\r\nconst List = ({\r\n  list,\r\n  updateItem,\r\n  deleteItem,\r\n  organisedDateList,\r\n  initialDate,\r\n  date,\r\n  setDate\r\n}) => {\r\n  // const [date, setDate] = useState();\r\n  const [daysTodos, setDaysTodos] = useState(null);\r\n\r\n  // useEffect(() => {\r\n  //   setDate(initialDate);\r\n  // }, [initialDate]);\r\n\r\n  useEffect(() => {\r\n    setDaysTodos(organisedDateList[date]);\r\n  }, [organisedDateList, date]);\r\n\r\n  return (\r\n    <div>\r\n      <label className=\"date-label\" htmlFor=\"date\">\r\n        Date\r\n        <select\r\n          id=\"select-date\"\r\n          value={date}\r\n          onChange={e => {\r\n            setDate(e.target.value);\r\n          }}\r\n          onBlur={e => setDate(e.target.value)}\r\n        >\r\n          {Object.keys(organisedDateList).map(date => (\r\n            <option key={date} value={date}>\r\n              {date === new Date().toLocaleDateString() ? \"Today\" : date}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </label>\r\n\r\n      <ul className=\"todo-list\">\r\n        {daysTodos\r\n          ? daysTodos.map(item => (\r\n              <ListItem\r\n                key={item.id}\r\n                todo={item}\r\n                date={date}\r\n                updateItem={() => updateItem(item.id)}\r\n                deleteItem={() => deleteItem(item.id)}\r\n              />\r\n            ))\r\n          : \"\"}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import axios from \"axios\";\r\nconst baseUrl = \"https://shrouded-earth-32064.herokuapp.com/\";\r\n\r\nconst getAll = async () => {\r\n  const request = await axios.get(baseUrl);\r\n  return request.data;\r\n};\r\n\r\nconst create = async newObject => {\r\n  const response = await axios.post(baseUrl, newObject);\r\n  return response.data;\r\n};\r\n\r\nconst update = async (id, newObject) => {\r\n  const response = await axios.put(`${baseUrl}/${id}`, newObject);\r\n  return response.data;\r\n};\r\n\r\nconst remove = async id => {\r\n  const response = await axios.delete(`${baseUrl}/${id}`);\r\n  return response.data;\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n  update,\r\n  remove\r\n};\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport List from \"./components/List\";\nimport Form from \"./components/Form\";\nimport todoService from \"./services/todos\";\n\nfunction App() {\n  const [list, setList] = useState([]);\n  const [date, setDate] = useState(new Date().toLocaleDateString());\n  const [newTodo, setNewTodo] = useState(\"\");\n  const [organisedDateList, setOrganisedDateList] = useState({});\n\n  useEffect(() => {\n    setDate(Object.keys(organisedDateList)[0]);\n  }, [organisedDateList]);\n\n  useEffect(() => {\n    todoService.getAll().then(response => setList(response.reverse()));\n  }, []);\n\n  useEffect(() => {\n    let newList = {\n      [date]: []\n    };\n    list.forEach(item => {\n      let parsedAndFormattedDate = new Date(\n        JSON.parse(item.date)\n      ).toLocaleDateString();\n      if (newList.hasOwnProperty(parsedAndFormattedDate)) {\n        newList = {\n          ...newList,\n          [parsedAndFormattedDate]: [\n            ...newList[parsedAndFormattedDate],\n            { content: item.content, id: item.id, completed: item.completed }\n          ]\n        };\n      } else {\n        newList = {\n          ...newList,\n          [parsedAndFormattedDate]: [\n            { content: item.content, id: item.id, completed: item.completed }\n          ]\n        };\n      }\n    });\n\n    setOrganisedDateList(newList);\n  }, [list, date]);\n\n  const addItem = event => {\n    event.preventDefault();\n    const todoObject = {\n      id: list.length + 1,\n      content: newTodo,\n      completed: false,\n      date: JSON.stringify(new Date())\n    };\n\n    todoService.create(todoObject).then(response => {\n      setList(list.concat(response));\n      setNewTodo(\"\");\n      setDate(new Date().toLocaleDateString());\n    });\n  };\n\n  const updateItem = id => {\n    const todo = list.find(t => t.id === id);\n    const updatedTodo = { ...todo, completed: !todo.completed };\n\n    todoService\n      .update(id, updatedTodo)\n      .then(returnedTodo => {\n        setList(list.map(item => (item.id !== id ? item : returnedTodo)));\n      })\n      .catch(error => console.error(error));\n  };\n\n  const handleItemChange = e => {\n    setNewTodo(e.target.value);\n  };\n\n  const deleteItem = id => {\n    const todo = list.find(t => t.id === id);\n\n    todoService\n      .remove(id, todo)\n      .then(() => {\n        setList(list.filter(item => item.id !== id));\n      })\n      .catch(error => console.error(error));\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>To-do List</h1>\n      <List\n        list={list}\n        updateItem={updateItem}\n        deleteItem={deleteItem}\n        organisedDateList={organisedDateList}\n        // initialDate={Object.keys(organisedDateList)[0]}\n        date={date}\n        setDate={setDate}\n      />\n      <form\n        className={\n          date === new Date().toLocaleDateString() ? \"todo-form\" : \"todo-form\"\n        }\n        onSubmit={addItem}\n      >\n        What do you want to do today?\n        <div className=\"input-and-button\">\n          <input\n            className=\"new-task-input\"\n            value={newTodo}\n            onChange={handleItemChange}\n          />\n          <button className=\"btn\" type=\"submit\">\n            Submit\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}