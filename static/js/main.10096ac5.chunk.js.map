{"version":3,"sources":["components/ListItem.js","components/List.js","reducers/todoReducer.js","App.js","index.js"],"names":["ListItem","todo","date","updateItem","deleteItem","className","completed","content","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","id","Date","toLocaleDateString","cx","cy","r","x1","y1","x2","y2","onClick","event","preventDefault","d","points","window","confirm","List","list","organisedDateList","initialDate","setDate","useState","daysTodos","setDaysTodos","useEffect","htmlFor","value","onChange","e","target","onBlur","Object","keys","map","key","item","todoReducer","state","action","type","uuid","JSON","stringify","filter","updatedItem","App","useReducer","localData","localStorage","getItem","parse","dispatch","newTodo","setNewTodo","setOrganisedDateList","setItem","newList","forEach","parsedAndFormattedDate","hasOwnProperty","find","t","updatedTodo","onSubmit","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.10096ac5.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst ListItem = ({ todo, date, updateItem, deleteItem }) => {\r\n  const handleDeleteClick = event => {\r\n    event.preventDefault();\r\n    const confirmDeletion = window.confirm(\r\n      `Do you really want to delete ${todo.content}?`\r\n    );\r\n    if (confirmDeletion) {\r\n      deleteItem();\r\n    }\r\n  };\r\n\r\n  const handleCompleteClick = event => {\r\n    event.preventDefault();\r\n    updateItem();\r\n  };\r\n\r\n  return (\r\n    <li className=\"todo-list-item\">\r\n      <div\r\n        className={\r\n          todo.completed\r\n            ? \"list-text-content completed-item\"\r\n            : \"list-text-content\"\r\n        }\r\n      >\r\n        {todo.content}\r\n      </div>\r\n      <div className=\"icons\">\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"24\"\r\n          height=\"24\"\r\n          viewBox=\"0 0 24 24\"\r\n          fill=\"none\"\r\n          stroke=\"#000000\"\r\n          strokeWidth=\"3\"\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n          id=\"warning-svg\"\r\n          className={\r\n            date !== new Date().toLocaleDateString() && !todo.completed\r\n              ? \"\"\r\n              : \"hide-item\"\r\n          }\r\n        >\r\n          <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\r\n          <line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"12\"></line>\r\n          <line x1=\"12\" y1=\"16\" x2=\"12\" y2=\"16\"></line>\r\n        </svg>\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"24\"\r\n          height=\"24\"\r\n          viewBox=\"0 0 24 24\"\r\n          fill=\"none\"\r\n          stroke=\"#7eff3e\"\r\n          strokeWidth=\"3\"\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n          id=\"complete-svg\"\r\n          onClick={handleCompleteClick}\r\n        >\r\n          <path d=\"M22 11.08V12a10 10 0 1 1-5.93-9.14\"></path>\r\n          <polyline points=\"22 4 12 14.01 9 11.01\"></polyline>\r\n        </svg>\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"24\"\r\n          height=\"24\"\r\n          viewBox=\"0 0 24 24\"\r\n          fill=\"none\"\r\n          stroke=\"#ff1493\"\r\n          strokeWidth=\"2\"\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n          className=\"feather feather-x-circle\"\r\n          id=\"delete-svg\"\r\n          onClick={handleDeleteClick}\r\n        >\r\n          <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\r\n          <line x1=\"15\" y1=\"9\" x2=\"9\" y2=\"15\"></line>\r\n          <line x1=\"9\" y1=\"9\" x2=\"15\" y2=\"15\"></line>\r\n        </svg>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ListItem;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ListItem from \"./ListItem\";\r\nimport \"../List.css\";\r\n\r\nconst List = ({\r\n  list,\r\n  updateItem,\r\n  deleteItem,\r\n  organisedDateList,\r\n  initialDate,\r\n  date,\r\n  setDate\r\n}) => {\r\n  // const [date, setDate] = useState();\r\n  const [daysTodos, setDaysTodos] = useState(null);\r\n\r\n  // useEffect(() => {\r\n  //   setDate(initialDate);\r\n  // }, [initialDate]);\r\n\r\n  useEffect(() => {\r\n    setDaysTodos(organisedDateList[date]);\r\n  }, [organisedDateList, date]);\r\n\r\n  return (\r\n    <div>\r\n      <label className=\"date-label\" htmlFor=\"date\">\r\n        Date\r\n        <select\r\n          id=\"select-date\"\r\n          value={date}\r\n          onChange={e => {\r\n            setDate(e.target.value);\r\n          }}\r\n          onBlur={e => setDate(e.target.value)}\r\n        >\r\n          {Object.keys(organisedDateList).map(date => (\r\n            <option key={date} value={date}>\r\n              {date === new Date().toLocaleDateString() ? \"Today\" : date}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </label>\r\n\r\n      <ul className=\"todo-list\">\r\n        {daysTodos\r\n          ? daysTodos.map(item => (\r\n              <ListItem\r\n                key={item.id}\r\n                todo={item}\r\n                date={date}\r\n                updateItem={() => updateItem(item.id)}\r\n                deleteItem={() => deleteItem(item.id)}\r\n              />\r\n            ))\r\n          : \"\"}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import uuid from \"uuid/v1\";\r\n\r\nexport const todoReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_TODO\":\r\n      return [\r\n        ...state,\r\n        {\r\n          id: uuid(),\r\n          content: action.todo.content,\r\n          completed: action.todo.completed || false,\r\n          date: JSON.stringify(new Date())\r\n        }\r\n      ];\r\n    case \"REMOVE_TODO\":\r\n      return state.filter(item => item.id !== action.id);\r\n    case \"UPDATE_TODO\":\r\n      return state.map(item =>\r\n        item.id !== action.id ? item : action.updatedItem\r\n      );\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { useState, useEffect, useReducer } from \"react\";\nimport \"./App.css\";\nimport List from \"./components/List\";\nimport { todoReducer } from \"./reducers/todoReducer\";\n\nfunction App() {\n  const [list, dispatch] = useReducer(todoReducer, [], () => {\n    const localData = localStorage.getItem(\"todos\");\n    return localData ? JSON.parse(localData) : [];\n  });\n  const [date, setDate] = useState(new Date().toLocaleDateString());\n  const [newTodo, setNewTodo] = useState(\"\");\n  const [organisedDateList, setOrganisedDateList] = useState({});\n\n  useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(list));\n  }, [list]);\n\n  useEffect(() => {\n    let newList = {\n      [date]: []\n    };\n    list.forEach(item => {\n      let parsedAndFormattedDate = new Date(\n        JSON.parse(item.date)\n      ).toLocaleDateString();\n      if (newList.hasOwnProperty(parsedAndFormattedDate)) {\n        newList = {\n          ...newList,\n          [parsedAndFormattedDate]: [\n            ...newList[parsedAndFormattedDate],\n            { content: item.content, id: item.id, completed: item.completed }\n          ]\n        };\n      } else {\n        newList = {\n          ...newList,\n          [parsedAndFormattedDate]: [\n            { content: item.content, id: item.id, completed: item.completed }\n          ]\n        };\n      }\n    });\n\n    setOrganisedDateList(newList);\n  }, [list, date]);\n\n  const addItem = event => {\n    dispatch({\n      type: \"ADD_TODO\",\n      todo: {\n        content: newTodo,\n        completed: false\n      }\n    });\n  };\n\n  const updateItem = id => {\n    const todo = list.find(t => t.id === id);\n    const updatedTodo = { ...todo, completed: !todo.completed };\n\n    dispatch({ type: \"UPDATE_TODO\", id: id, updatedItem: updatedTodo });\n  };\n\n  const handleItemChange = e => {\n    setNewTodo(e.target.value);\n  };\n\n  const deleteItem = id => {\n    dispatch({ type: \"REMOVE_TODO\", id: id });\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>To-do List</h1>\n      <List\n        list={list}\n        updateItem={updateItem}\n        deleteItem={deleteItem}\n        organisedDateList={organisedDateList}\n        // initialDate={Object.keys(organisedDateList)[0]}\n        date={date}\n        setDate={setDate}\n      />\n      <form\n        className={\n          date === new Date().toLocaleDateString() ? \"todo-form\" : \"todo-form\"\n        }\n        onSubmit={addItem}\n      >\n        What do you want to do today?\n        <div className=\"input-and-button\">\n          <input\n            className=\"new-task-input\"\n            value={newTodo}\n            onChange={handleItemChange}\n          />\n          <button className=\"btn\" type=\"submit\">\n            Submit\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}